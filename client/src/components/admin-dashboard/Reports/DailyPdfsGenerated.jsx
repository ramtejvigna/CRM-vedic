import { useEffect, useState } from "react";
import { chartsConfig } from "../../../configs";
import { StatisticsChart } from "../../charts";
import axios from "axios";
import {HOST} from "../../../utils/constants.js"

function DailyPdfsGenerated() {

    const [chartData , setChartData] = useState({
        type: "bar",
        height: 220,
        series: [
          {
            name: "Views",
            data: [],
          },
        ],
        options: {
          ...chartsConfig,
          chart: {
            background: "#1E90FF",
            toolbar: {
              show: false,
            },
          },
          colors: ["#FFFFFF"], 
          plotOptions: {
            bar: {
              columnWidth: "10%", 
              borderRadius: 5, 
            },
          },
          xaxis: {
            categories: [],
            labels: {
              style: {
                colors: "#FFFFFF", 
              },
            },
          },
          yaxis: {
            labels: {
              style: {
                colors: "#FFFFFF", 
              },
            },
          },
          grid: {
            show: true, 
            borderColor: "rgba(255, 255, 255, 0.3)", 
            strokeDashArray: 4,
            yaxis: {
              lines: {
                show: true, 
              },
            },
            xaxis: {
              lines: {
                show: true, 
              },
            },
          },
        },
      })


      useEffect(() => {
        const dailyPdfsGenerated = async () => {
            try {
                const res = await axios.get(`${HOST}/api/reports/pdf-gen-today` , {withCredentials : true});

                if(res.status === 200) {
                    console.log(res.data)
                    const enames = res.data.map((d) => d.employeeName);
                    const pdfCount = res.data.map((d) => d.count)
                    setChartData((prev) => ({
                        ...prev ,
                        series : [
                            {
                                name : "pdfs" ,
                                data : pdfCount
                            }
                        ],
                        options : {
                            ...prev.options ,
                            xaxis : {
                                ...prev.options.xaxis ,
                                categories : enames
                            }
                        }
                    }))
                }
            } catch (error) {
                console.log(error.message)
            }
        }

        dailyPdfsGenerated()
      } , []);



  return (
    <StatisticsChart title="Pdfs Generated Today" color="blue" chart={chartData} description="These are the pdfs generated by employees , today." />
  )
}

export default DailyPdfsGenerated