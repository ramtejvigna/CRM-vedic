import { useEffect, useState } from "react";
import { chartsConfig } from "../../../configs/index.js";
import { StatisticsChart } from "../../charts/index.js";
import axios from "axios";
import { HOST } from "../../../utils/constants.js";

function DailyPdfsGenerated() {
  const [chartData, setChartData] = useState({
    type: "bar",
    height: 250,
    series: [
      {
        name: "Views",
        data: [],
      },
    ],
    options: {
      ...chartsConfig,
      chart: {
        background: "#1E90FF",
        toolbar: {
          show: false,
        },
      },
      colors: ["#FFFFFF"],
      plotOptions: {
        bar: {
          columnWidth: "10%",
          borderRadius: 5,
        },
      },
      xaxis: {
        categories: [],
        labels: {
          style: {
            colors: "#FFFFFF",
          },
        },
      },
      yaxis: {
        labels: {
          style: {
            colors: "#FFFFFF",
          },
        },
      },
      grid: {
        show: true,
        borderColor: "rgba(255, 255, 255, 0.3)",
        strokeDashArray: 4,
        yaxis: {
          lines: {
            show: true,
          },
        },
        xaxis: {
          lines: {
            show: true,
          },
        },
      },
    },
  });

  const [timeRange, setTimeRange] = useState("today");

  useEffect(() => {
    const fetchPdfData = async () => {
      try {
        const res = await axios.get(`${HOST}/api/reports/pdf-gen-today?range=${timeRange}`, {
          withCredentials: true,
        });

        if (res.status === 200) {
          const enames = res.data.map((d) => d.employeeName);
          const pdfCount = res.data.map((d) => d.count);
          setChartData((prev) => ({
            ...prev,
            series: [
              {
                name: "PDFs",
                data: pdfCount,
              },
            ],
            options: {
              ...prev.options,
              xaxis: {
                ...prev.options.xaxis,
                categories: enames,
              },
            },
          }));
        }
      } catch (error) {
        console.log(error.message);
      }
    };

    fetchPdfData();
  }, [timeRange]);

  const handleFilterChange = (e) => {
    setTimeRange(e.target.value);
  };

  const filterComponent = (
    <select
      value={timeRange}
      onChange={handleFilterChange}
      className="border cursor-pointer border-gray-300 rounded-md px-2 py-1 text-xs bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
    >
      <option value="today">Today</option>
      <option value="week">Weekly</option>
      <option value="month">Monthly</option>
    </select>
  );

  return (
    <div>
    
      {/* Chart */}
      <StatisticsChart
        title="PDFs Generated"
        color="blue"
        chart={chartData}
        filter={filterComponent}
        description={`These are the PDFs generated by employees for the selected time range (${timeRange}).`}
      />
    </div>
  );
}

export default DailyPdfsGenerated;
